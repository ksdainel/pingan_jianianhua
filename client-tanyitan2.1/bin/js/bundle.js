var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var GameUI_1 = require("./script/GameUI");
var GameControl_1 = require("./script/GameControl");
var StartView_1 = require("./script/start/StartView");
var DropBox_1 = require("./script/DropBox");
var Bullet_1 = require("./script/Bullet");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("script/GameUI.ts", GameUI_1.default);
        reg("script/GameControl.ts", GameControl_1.default);
        reg("script/start/StartView", StartView_1.default);
        reg("script/DropBox.ts", DropBox_1.default);
        reg("script/Bullet.ts", Bullet_1.default);
    };
    GameConfig.width = 640;
    GameConfig.height = 1136;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "none";
    GameConfig.alignV = "top";
    GameConfig.alignH = "left";
    GameConfig.startScene = "start/StartViewSkin.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = false;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./script/Bullet":3,"./script/DropBox":4,"./script/GameControl":6,"./script/GameUI":8,"./script/start/StartView":18}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var GameContainer_1 = require("./script/GameContainer");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height);
        // else Laya.init(GameConfig.width, GameConfig.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"] && Laya["Physics"].I.start(); // Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        //	GameConfig.startScene && Laya.Scene.open(GameConfig.startScene);
        console.log("start");
        var gameC = new GameContainer_1.default();
        Laya.stage.addChild(gameC);
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1,"./script/GameContainer":5}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameView_1 = require("./game/GameView");
/**
* 子弹脚本，实现子弹飞行逻辑及对象池回收机制
*/
var Bullet = /** @class */ (function (_super) {
    __extends(Bullet, _super);
    function Bullet() {
        var _this = _super.call(this) || this;
        _this.status = 0;
        return _this;
    }
    Bullet.prototype.onEnable = function () {
        //设置初始速度
        // var rig: Laya.RigidBody = this.owner.getComponent(Laya.RigidBody);
        // rig.setVelocity({ x: 0, y: -50 });
    };
    Bullet.prototype.onTriggerEnter = function (other, self, contact) {
        //如果被碰到，则移除子弹
        var owner = this.owner;
        if (other.label === "ground") {
            var coll = this.owner.getComponent(Laya.CircleCollider);
            coll.restitution = 0;
            var rig = this.owner.getComponent(Laya.RigidBody);
            rig.setVelocity({ x: 0, y: 0 });
            GameView_1.default.instance.dropBall();
            owner.removeSelf();
        }
        //    if (other.label === "dangban"&&this.status==0) {
        //     var rig: Laya.RigidBody = this.owner.getComponent(Laya.RigidBody);
        //     rig.type = "kinematic";
        //    }
    };
    Bullet.prototype.onTriggerExit = function (other) {
        if (other.label === "bullet") {
            var rig = this.owner.getComponent(Laya.RigidBody);
            //rig.group=1;
        }
        //    if (other.label === "dangban") {
        //     var rig: Laya.RigidBody = this.owner.getComponent(Laya.RigidBody);
        //     rig.type = "dynamic";
        //     this.status =1;
        //    }
    };
    Bullet.prototype.shot = function () {
        var rig = this.owner.getComponent(Laya.RigidBody);
        rig.type = "dynamic";
        rig.setVelocity({ x: -30, y: -5 });
    };
    Bullet.prototype.onUpdate = function () {
        //如果子弹超出屏幕，则移除子弹
        if (this.owner.y < -10) {
            this.owner.removeSelf();
        }
    };
    Bullet.prototype.onDisable = function () {
        //子弹被移除时，回收子弹到对象池，方便下次复用，减少对象创建开销
        Laya.Pool.recover("bullet", this.owner);
    };
    return Bullet;
}(Laya.Script));
exports.default = Bullet;
},{"./game/GameView":10}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameView_1 = require("./game/GameView");
/**
 * 掉落盒子脚本，实现盒子碰撞及回收流程
 */
var DropBox = /** @class */ (function (_super) {
    __extends(DropBox, _super);
    function DropBox() {
        var _this = _super.call(this) || this;
        /**盒子等级 */
        _this.level = 1;
        return _this;
    }
    DropBox.prototype.onEnable = function () {
        /**获得组件引用，避免每次获取组件带来不必要的查询开销 */
        this._rig = this.owner.getComponent(Laya.RigidBody);
        this.level = Math.round(Math.random() * 10) + 5;
        this._text = this.owner.getChildByName("levelTxt");
        this._text.text = this.level + "";
        var sc = Math.random() * 4 + 0.6;
    };
    DropBox.prototype.onUpdate = function () {
        //让持续盒子旋转
        //  (this.owner as Laya.Sprite).rotation++;
    };
    DropBox.prototype.onTriggerEnter = function (other, self, contact) {
        var owner = this.owner;
        if (other.label === "buttle") {
            //碰撞到子弹后，增加积分，播放声音特效
            if (this.level > 1) {
                this.level--;
                this._text.changeText(this.level + "");
                // owner.getComponent(Laya.RigidBody).setVelocity({ x: 0, y: -10 });
                Laya.SoundManager.playSound("sound/hit.wav");
            }
            else {
                if (owner.parent) {
                    var effect = Laya.Pool.getItemByCreateFun("effect", this.createEffect, this);
                    effect.pos(owner.x, owner.y);
                    owner.parent.addChild(effect);
                    effect.play(0, true);
                    owner.removeSelf();
                    Laya.SoundManager.playSound("sound/destroy.wav");
                }
            }
            GameView_1.default.instance.addScore(1);
        }
        else if (other.label === "ground") {
            //只要有一个盒子碰到地板，则停止游戏
            owner.removeSelf();
            // GameUI.instance.stopGame();
        }
    };
    /**使用对象池创建爆炸动画 */
    DropBox.prototype.createEffect = function () {
        var ani = new Laya.Animation();
        ani.loadAnimation("test/testAni.ani");
        ani.on(Laya.Event.COMPLETE, null, recover);
        function recover() {
            ani.removeSelf();
            Laya.Pool.recover("effect", ani);
        }
        return ani;
    };
    DropBox.prototype.onDisable = function () {
        //盒子被移除时，回收盒子到对象池，方便下次复用，减少对象创建开销。
        Laya.Pool.recover("dropBox", this.owner);
    };
    return DropBox;
}(Laya.Script));
exports.default = DropBox;
},{"./game/GameView":10}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var StartView_1 = require("./start/StartView");
var LotteryView_1 = require("./lottery/LotteryView");
var GameView_1 = require("./game/GameView");
var GameData_1 = require("./GameData");
var _gameData = GameData_1.default;
/**
 * 本示例采用非脚本的方式实现，而使用继承页面基类，实现页面逻辑。在IDE里面设置场景的Runtime属性即可和场景进行关联
 * 相比脚本方式，继承式页面类，可以直接使用页面定义的属性（通过IDE内var属性定义），比如this.tipLbll，this.scoreLbl，具有代码提示效果
 * 建议：如果是页面级的逻辑，需要频繁访问页面内多个元素，使用继承式写法，如果是独立小模块，功能单一，建议用脚本方式实现，比如子弹脚本。
 */
var GameContainer = /** @class */ (function (_super) {
    __extends(GameContainer, _super);
    function GameContainer() {
        var _this = _super.call(this) || this;
        //GameUI.instance = this;
        //关闭多点触控，否则就无敌了
        Laya.MouseManager.multiTouchEnabled = false;
        console.log("gameScence");
        return _this;
    }
    GameContainer.prototype.onEnable = function () {
        console.log("onEnable");
        if (window.document.body.clientHeight > window.document.body.clientWidth) {
            _gameData.Screen_H_W_Ratio = window.document.body.clientHeight / window.document.body.clientWidth;
        }
        else {
            _gameData.Screen_H_W_Ratio = window.document.body.clientWidth / window.document.body.clientHeight;
        }
        console.log("屏幕长宽比：" + _gameData.Screen_H_W_Ratio);
        // this._control = this.getComponent(GameControl);
        //点击提示文字，开始游戏
        this.openStart();
        //this.tipLbll.on(Laya.Event.CLICK, this, this.onTipClick);
    };
    GameContainer.prototype.onTipClick = function (e) {
        // this.tipLbll.visible = false;
        // this._score = 0;
        // this.scoreLbl.text = "";
        // this._control.startGame();
    };
    /**增加分数 */
    GameContainer.prototype.addScore = function (value) {
        if (value === void 0) { value = 1; }
        // this._score += value;
        // this.scoreLbl.changeText("分数：" + this._score);
        // //随着分数越高，难度增大
        // if (this._control.createBoxInterval > 600 && this._score % 20 == 0) this._control.createBoxInterval -= 20;
    };
    /**停止游戏 */
    GameContainer.prototype.stopGame = function () {
        // this.tipLbll.visible = true;
        // this.tipLbll.text = "游戏结束了，点击屏幕重新开始";
        // this._control.stopGame();
    };
    GameContainer.prototype.openStart = function () {
        this._startView = new StartView_1.default(this);
        this.addChild(this._startView);
    };
    GameContainer.prototype.openGame = function (ballNum) {
        this._startView.destroy();
        this._gameView = new GameView_1.default(this);
        this.addChild(this._gameView);
        this._gameView.onStartGame(ballNum);
    };
    GameContainer.prototype.openLottery = function () {
        this._lotteryView = new LotteryView_1.default(this);
        this.addChild(this._lotteryView);
    };
    return GameContainer;
}(Laya.Sprite));
exports.default = GameContainer;
},{"./GameData":7,"./game/GameView":10,"./lottery/LotteryView":15,"./start/StartView":18}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 游戏控制脚本。定义了几个dropBox，bullet，createBoxInterval等变量，能够在IDE显示及设置该变量
 * 更多类型定义，请参考官方文档
 */
var GameControl = /** @class */ (function (_super) {
    __extends(GameControl, _super);
    function GameControl() {
        var _this = _super.call(this) || this;
        /** @prop {name:createBoxInterval,tips:"间隔多少毫秒创建一个下跌的容器",type:int,default:1000}*/
        _this.createBoxInterval = 1000;
        /**开始时间*/
        _this._time = 0;
        /**是否已经开始游戏 */
        _this._started = false;
        _this.boxNum = 0;
        _this.boxArr = [];
        _this.ballArr = [];
        _this.balllNum = 10;
        _this.currectNumber = 0;
        _this.prefabBox = ["dropBox", "dropBox2", "dropBox3"];
        _this.posArr = [[100, 410], [280, 410], [480, 410], [100, 588], [280, 588], [480, 588], [100, 725], [280, 725], [480, 725], [100, 890], [280, 890], [480, 890]];
        _this.posArrWait = [];
        return _this;
    }
    GameControl.prototype.onAwake = function () {
        console.log("onEnable onAwake gameControl");
        this._time = Date.now();
        this._gameBox = this.owner.getChildByName("gameBox");
        //this.createBox();
        this.startCreatBox();
    };
    GameControl.prototype.initGame = function (balllNum) {
        console.log("initGame" + balllNum);
        this.balllNum = balllNum;
        this.currectNumber = 0;
        this._started = false;
        this.enabled = false;
    };
    GameControl.prototype.startCreatBox = function () {
        console.log("startCreatBox");
        if (this.boxArr.length > 0) {
            for (var i = this.boxArr.length - 1; i >= 0; i--) {
                var box = this.boxArr[i];
                box.removeSelf();
            }
            this.boxArr = [];
            this.boxNum = 0;
        }
        this.posArrWait = this.posArr.concat();
        for (var i = 0; i < 12; i++) {
            this.createBox();
        }
    };
    GameControl.prototype.onUpdate = function () {
        //每间隔一段时间创建一个盒子
        var now = Date.now();
        if (now - this._time > this.createBoxInterval) {
            this._time = now;
            if (this.boxNum > 10) {
                return;
            }
            //this.createBox();
        }
    };
    GameControl.prototype.createBox = function () {
        //使用对象池创建盒子
        console.log("产生一个盒子");
        this.boxNum++;
        var boxData = this.prefabBox[Math.floor(Math.random() * this.prefabBox.length)];
        var poolName = boxData;
        var boxEntiy = this[poolName];
        var box = Laya.Pool.getItemByCreateFun(poolName, boxEntiy.create, boxEntiy);
        var pos = this.posArrWait.shift();
        var _x = pos[0];
        var _y = pos[1];
        var sc = Math.random() * 4 + 0.6;
        // box.scale(sc,sc);
        //box.pos(Math.random() * (Laya.stage.width - 100),(Math.random()*400+400 ));
        box.pos(_x, _y);
        this._gameBox.addChild(box);
        this.boxArr.push(box);
    };
    GameControl.prototype.onStageClick = function (e) {
        //停止事件冒泡，提高性能，当然也可以不要
        //e.stopPropagation();
        //舞台被点击后，使用对象池创建子弹
        // let flyer: Laya.Sprite = Laya.Pool.getItemByCreateFun("bullet", this.bullet.create, this.bullet);
        // flyer.pos(Laya.stage.mouseX, Laya.stage.mouseY);
        // this._gameBox.addChild(flyer);
        console.log("点击了一下", Laya.stage.mouseX, Laya.stage.mouseY);
    };
    GameControl.prototype.creatBall = function () {
        console.log("产生一个球" + this.currectNumber);
        if (this.currectNumber >= this.balllNum)
            return;
        var flyer = Laya.Pool.getItemByCreateFun("bullet", this.bullet.create, this.bullet);
        flyer.pos(594, 927);
        flyer.rotation = 0;
        this._gameBox.addChild(flyer);
        this.ballArr.push(flyer);
        var rig = flyer.getComponent(Laya.RigidBody);
        rig.setVelocity({ x: 0, y: 0 });
        rig.type = "kinematic";
        // Laya.Tween.to(flyer,{y:200},200,null,Laya.Handler.create(this,function(){
        //     var rig: Laya.RigidBody = flyer.getComponent(Laya.RigidBody);
        //     rig.setVelocity({ x: 0, y: -50 });
        // }));
        var timeLine = new Laya.TimeLine();
        timeLine
            .addLabel("rabbite11", 0).to(flyer, { x: 576, y: 250 }, 100, null, 0)
            .addLabel("rabbite12", 1).to(flyer, { x: 550, y: 157 }, 50, null, 0)
            .addLabel("rabbite13", 2).to(flyer, { x: 500, y: 97 }, 50, null, 0)
            .addLabel("rabbite14", 3).to(flyer, { x: 370, y: 53 }, 50, null, 0);
        timeLine.on(Laya.Event.COMPLETE, this, this.shot, [flyer]);
        timeLine.play(0, false);
        this.currectNumber++;
        Laya.timer.once(100, this, this.creatBall);
    };
    GameControl.prototype.shot = function (flyer) {
        // var flyer = flyerA[0];
        var rig = flyer.getComponent(Laya.RigidBody);
        rig.setVelocity({ x: -30, y: -5 });
        rig.type = "dynamic";
    };
    GameControl.prototype.TweenComplete = function () {
    };
    GameControl.prototype.pause = function () {
        for (var i = 0; i < this.ballArr.length; i++) {
            var flyer = this.ballArr[i];
            var rig = flyer.getComponent(Laya.RigidBody);
            rig.setVelocity({ x: 0, y: 0 });
            rig.type = "static";
        }
    };
    GameControl.prototype.repause = function () {
        for (var i = 0; i < this.ballArr.length; i++) {
            var flyer = this.ballArr[i];
            var rig = flyer.getComponent(Laya.RigidBody);
            rig.setVelocity({ x: 0, y: 0 });
            rig.type = "dynamic";
        }
    };
    /**开始游戏，通过激活本脚本方式开始游戏*/
    GameControl.prototype.startGame = function () {
        if (!this._started) {
            this._started = true;
            this.enabled = true;
            Laya.timer.once(100, this, this.creatBall);
        }
    };
    /**结束游戏，通过非激活本脚本停止游戏 */
    GameControl.prototype.stopGame = function () {
        console.log("stop control");
        this._started = false;
        this.enabled = false;
        this.createBoxInterval = 1000;
        this._gameBox.removeChildren();
    };
    return GameControl;
}(Laya.Script));
exports.default = GameControl;
},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameData = /** @class */ (function () {
    function GameData() {
    }
    GameData.init = function () {
        //  console.log("初始游戏数据");
    };
    GameData.getFruitSceneSize = function () {
        var ww = Laya.stage.designWidth;
        var hh = Laya.stage.designHeight;
        var size = {
            width: ww,
            height: hh
        };
        return size;
    };
    GameData.Screen_H_W_Ratio = 1.7;
    GameData.gameState = 0; //游戏状态
    GameData.recvMsgId = 0;
    GameData.gamecomda = "";
    return GameData;
}());
exports.default = GameData;
},{}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("./../ui/layaMaxUI");
var GameControl_1 = require("./GameControl");
/**
 * 本示例采用非脚本的方式实现，而使用继承页面基类，实现页面逻辑。在IDE里面设置场景的Runtime属性即可和场景进行关联
 * 相比脚本方式，继承式页面类，可以直接使用页面定义的属性（通过IDE内var属性定义），比如this.tipLbll，this.scoreLbl，具有代码提示效果
 * 建议：如果是页面级的逻辑，需要频繁访问页面内多个元素，使用继承式写法，如果是独立小模块，功能单一，建议用脚本方式实现，比如子弹脚本。
 */
var GameUI = /** @class */ (function (_super) {
    __extends(GameUI, _super);
    function GameUI() {
        var _this = _super.call(this) || this;
        GameUI.instance = _this;
        //关闭多点触控，否则就无敌了
        Laya.MouseManager.multiTouchEnabled = false;
        return _this;
    }
    GameUI.prototype.onEnable = function () {
        this._control = this.getComponent(GameControl_1.default);
        //点击提示文字，开始游戏
        this.tipLbll.on(Laya.Event.CLICK, this, this.onTipClick);
    };
    GameUI.prototype.onTipClick = function (e) {
        this.tipLbll.visible = false;
        this._score = 0;
        this.scoreLbl.text = "";
        this._control.startGame();
    };
    /**增加分数 */
    GameUI.prototype.addScore = function (value) {
        if (value === void 0) { value = 1; }
        this._score += value;
        this.scoreLbl.changeText("分数：" + this._score);
        //随着分数越高，难度增大
        if (this._control.createBoxInterval > 600 && this._score % 20 == 0)
            this._control.createBoxInterval -= 20;
    };
    /**停止游戏 */
    GameUI.prototype.stopGame = function () {
        this.tipLbll.visible = true;
        this.tipLbll.text = "游戏结束了，点击屏幕重新开始";
        this._control.stopGame();
    };
    return GameUI;
}(layaMaxUI_1.ui.test.TestSceneUI));
exports.default = GameUI;
},{"./../ui/layaMaxUI":19,"./GameControl":6}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TouchEff = /** @class */ (function () {
    function TouchEff() {
    }
    TouchEff.segEff = function (tar) {
        //设置组件的中心点
        var target = tar;
        // target.anchorX = target.anchorY = 0.5;
        //添加鼠标按下事件侦听。按时时缩小按钮。
        target.on(Laya.Event.MOUSE_DOWN, this, this.scaleSmal);
        //添加鼠标抬起事件侦听。抬起时还原按钮。
        target.on(Laya.Event.MOUSE_UP, this, this.scaleBig);
        //添加鼠标离开事件侦听。离开时还原按钮。
        target.on(Laya.Event.MOUSE_OUT, this, this.scaleBig);
    };
    TouchEff.scaleBig = function (e) {
        var target = e.target;
        //变大还原的缓动效果
        Laya.Tween.to(target, { scaleX: 1, scaleY: 1 }, this.scaleTime);
    };
    TouchEff.scaleSmal = function (e) {
        var target = e.target;
        //缩小至0.8的缓动效果
        Laya.Tween.to(target, { scaleX: 0.95, scaleY: 0.95 }, this.scaleTime);
    };
    TouchEff.scaleTime = 50;
    return TouchEff;
}());
exports.default = TouchEff;
},{}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PauseView_1 = require("./PauseView");
var OverView_1 = require("./OverView");
var tantanView_1 = require("./tantanView");
var GameView = /** @class */ (function (_super) {
    __extends(GameView, _super);
    function GameView(parent) {
        var _this = _super.call(this) || this;
        /**当前游戏积分字段 */
        _this._score = 0;
        _this.balllNum = 10;
        _this.dropNum = 0;
        //关闭多点触控，否则就无敌了
        _this.Mparent = parent;
        GameView.instance = _this;
        return _this;
    }
    GameView.prototype.onEnable = function () {
        //点击提示文字，开始游戏
        console.log("打开游戏");
    };
    /**增加分数 */
    GameView.prototype.addScore = function (value) {
        if (value === void 0) { value = 1; }
        this._score += value;
        this._tantanView.scoreLbl.changeText("" + this._score);
        //随着分数越高，难度增大
        // if (this._control.createBoxInterval > 600 && this._score % 20 == 0) this._control.createBoxInterval -= 20;
    };
    GameView.prototype.onStartGame = function (ballNum) {
        this.balllNum = ballNum;
        this.dropNum = 0;
        this.openTanTan();
        this.initGame();
    };
    /**球掉落 */
    GameView.prototype.dropBall = function () {
        console.log("掉落" + this.dropNum + "===" + this.balllNum);
        this.dropNum++;
        if (this.dropNum >= this.balllNum) {
            this.openOver(this._score);
        }
    };
    GameView.prototype.openTanTan = function () {
        this._score = 0;
        this._tantanView = new tantanView_1.default(this);
        this.addChild(this._tantanView);
        // this._tantanView._control.startCreatBox();
    };
    GameView.prototype.openPause = function () {
        this._pauseView = new PauseView_1.default(this);
        this.addChild(this._pauseView);
    };
    GameView.prototype.rePause = function () {
        this._tantanView.rePause();
    };
    GameView.prototype.openOver = function (score) {
        console.log("open over" + score);
        this._overView = new OverView_1.default(this);
        this.addChild(this._overView);
        this._overView.openUI(score);
    };
    /**初始化 */
    GameView.prototype.initGame = function () {
        this._tantanView.initGame(this.balllNum);
        this.dropNum = 0;
        this._score = 0;
        this._tantanView.scoreLbl.changeText("" + this._score);
    };
    /**重新开始 */
    GameView.prototype.retry = function () {
        // this._tantanView.destroy();
        // this._tantanView = null;
        // this.openTanTan();
        this.initGame();
        this._tantanView._control.startCreatBox();
    };
    return GameView;
}(Laya.Sprite));
exports.default = GameView;
},{"./OverView":11,"./PauseView":12,"./tantanView":13}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var GameData_1 = require("../GameData");
var OverView = /** @class */ (function (_super) {
    __extends(OverView, _super);
    function OverView(parent) {
        var _this = _super.call(this) || this;
        _this._Mparent = parent;
        var bg = new Laya.Sprite();
        bg.width = 640;
        bg.height = 1200;
        bg.graphics.drawRect(-100, -100, 1500, 1500, "#000000");
        bg.alpha = 0.6;
        _this.addChild(bg);
        console.log("添加显示rule");
        return _this;
    }
    // private myConncet: iugame.MyConnect; 
    OverView.prototype.onEnable = function () {
        console.log("onEnable rule");
        //点击提示文字，开始游戏
        this.fitSceen();
        this.startAni();
        // this.thisDisplay.btn_close.on(Laya.Event.CLICK, this, this.closeMe);
    };
    OverView.prototype.close = function () {
        //super.close();
        //console.log("close start");
        // this.timeLine.destroy();
        // App.SoundManager.stopAll();
    };
    OverView.prototype.openUI = function (data) {
        this.thisDisplay1 = new layaMaxUI_1.ui.game.GameOverSkin1UI();
        this.thisDisplay1.popup(true, true);
        this.addChild(this.thisDisplay1);
        this.thisDisplay1.btn_retry.on(Laya.Event.CLICK, this, this.retry);
        this.initUI(data);
    };
    OverView.prototype.initUI = function (data) {
        this.thisDisplay1.lab_score.text = data + "";
    };
    /**屏幕适配 */
    OverView.prototype.fitSceen = function () {
        console.log("长宽比" + GameData_1.default.Screen_H_W_Ratio);
        // if (GameData.Screen_H_W_Ratio < 1.4) {
        //     this.thisDisplay.box_head.y = -10;
        //     this.thisDisplay.box_bottom.y = -180;
        // } else if (GameData.Screen_H_W_Ratio < 1.5) {
        //     this.thisDisplay.box_head.y = -10;
        //     this.thisDisplay.box_bottom.y = -160;
        // } else if (GameData.Screen_H_W_Ratio < 1.6) {
        //     this.thisDisplay.box_head.y = -5;
        //     this.thisDisplay.box_bottom.y = -140;
        // } else if (GameData.Screen_H_W_Ratio < 1.7) {
        //     this.thisDisplay.box_bottom.y = -100;
        // }
    };
    /**开场动画 */
    OverView.prototype.startAni = function () {
    };
    OverView.prototype.closeMe = function () {
        this.thisDisplay1.close();
        this.destroy();
    };
    OverView.prototype.retry = function () {
        this.closeMe();
        this._Mparent.retry();
    };
    return OverView;
}(Laya.Sprite));
exports.default = OverView;
},{"../../ui/layaMaxUI":19,"../GameData":7}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var GameData_1 = require("../GameData");
var PauseView = /** @class */ (function (_super) {
    __extends(PauseView, _super);
    function PauseView(parent) {
        var _this = _super.call(this) || this;
        _this.thisDisplay = new layaMaxUI_1.ui.game.GamePauseSkinUI();
        _this._Mparent = parent;
        var bg = new Laya.Sprite();
        bg.width = 640;
        bg.height = 1200;
        bg.graphics.drawRect(-100, -100, 1500, 1500, "#000000");
        bg.alpha = 0.6;
        _this.addChild(bg);
        console.log("添加显示rule");
        return _this;
    }
    //private myConncet: iugame.MyConnect; 
    PauseView.prototype.onEnable = function () {
        console.log("onEnable rule");
        //点击提示文字，开始游戏
        this.thisDisplay.popup(true, true);
        this.addChild(this.thisDisplay);
        this.fitSceen();
        this.startAni();
        this.thisDisplay.btn_retry.on(Laya.Event.CLICK, this, this.retry);
        this.thisDisplay.btn_goon.on(Laya.Event.CLICK, this, this.goon);
    };
    PauseView.prototype.close = function () {
        //super.close();
        //console.log("close start");
        // this.timeLine.destroy();
        // App.SoundManager.stopAll();
    };
    PauseView.prototype.initData = function () {
        // super.initData();
        // console.log("initData");
    };
    PauseView.prototype.initUI = function () {
        // super.initUI();
        // this.thisDisplay.btn_startGame.on(Laya.Event.CLICK, this, this.startGame);
        // this.thisDisplay.btn_instruct.on(Laya.Event.CLICK, this, this.openRul);
        // this.thisDisplay.btn_myPrize.on(Laya.Event.CLICK, this, this.openGift);
        // this.thisDisplay.btn_lottery.on(Laya.Event.CLICK, this, this.gotoLottery);
    };
    /**屏幕适配 */
    PauseView.prototype.fitSceen = function () {
        console.log("长宽比" + GameData_1.default.Screen_H_W_Ratio);
        // if (GameData.Screen_H_W_Ratio < 1.4) {
        //     this.thisDisplay.box_head.y = -10;
        //     this.thisDisplay.box_bottom.y = -180;
        // } else if (GameData.Screen_H_W_Ratio < 1.5) {
        //     this.thisDisplay.box_head.y = -10;
        //     this.thisDisplay.box_bottom.y = -160;
        // } else if (GameData.Screen_H_W_Ratio < 1.6) {
        //     this.thisDisplay.box_head.y = -5;
        //     this.thisDisplay.box_bottom.y = -140;
        // } else if (GameData.Screen_H_W_Ratio < 1.7) {
        //     this.thisDisplay.box_bottom.y = -100;
        // }
    };
    /**开场动画 */
    PauseView.prototype.startAni = function () {
    };
    PauseView.prototype.closeMe = function () {
        this.thisDisplay.close();
        this.destroy();
    };
    PauseView.prototype.retry = function () {
        this.closeMe();
        this._Mparent.retry();
    };
    PauseView.prototype.goon = function () {
        this.closeMe();
        this._Mparent.rePause();
    };
    return PauseView;
}(Laya.Sprite));
exports.default = PauseView;
},{"../../ui/layaMaxUI":19,"../GameData":7}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var GameControl_1 = require("../GameControl");
/**
 * 本示例采用非脚本的方式实现，而使用继承页面基类，实现页面逻辑。在IDE里面设置场景的Runtime属性即可和场景进行关联
 * 相比脚本方式，继承式页面类，可以直接使用页面定义的属性（通过IDE内var属性定义），比如this.tipLbll，this.scoreLbl，具有代码提示效果
 * 建议：如果是页面级的逻辑，需要频繁访问页面内多个元素，使用继承式写法，如果是独立小模块，功能单一，建议用脚本方式实现，比如子弹脚本。
 */
var tantanView = /** @class */ (function (_super) {
    __extends(tantanView, _super);
    function tantanView(parent) {
        var _this = _super.call(this) || this;
        _this.touchT = 0;
        _this.isInTouch = false;
        _this.isTouchEnd = false;
        _this.ganSpeed = 0;
        //关闭多点触控，否则就无敌了
        Laya.MouseManager.multiTouchEnabled = false;
        _this.Mparent = parent;
        _this._control = _this.getComponent(GameControl_1.default);
        return _this;
    }
    tantanView.prototype.onEnable = function () {
        console.log("onEnable tantan");
        //点击提示文字，开始游戏
        // this.sp_yindao.on(Laya.Event.CLICK, this, this.onTipClick);
        this.sp_pause.on(Laya.Event.CLICK, this, this.pauseGame);
        this.on(Laya.Event.MOUSE_DOWN, this, this.onTouchDown);
        this.on(Laya.Event.MOUSE_UP, this, this.onTouchUp);
        //this.on(Laya.Event.MOUSE_OVER, this, this.onTouchUp);
        //this.on(Laya.Event.MOUSE_OUT, this, this.onTouchUp);
    };
    tantanView.prototype.onTipClick = function (e) {
        console.log("点击开始游戏");
        this.sp_yindao.visible = false;
        this._score = 0;
        this.scoreLbl.text = "";
        //this._control.startGame();
    };
    /**初始化 */
    tantanView.prototype.initGame = function (ballNum) {
        this.touchT = 0;
        this.isInTouch = false;
        this.isTouchEnd = false;
        this.ganSpeed = 0;
        this._control.initGame(ballNum);
        this.sp_ganBall.visible = true;
    };
    tantanView.prototype.onTouchDown = function () {
        console.log("按下" + this.isInTouch + this.isTouchEnd);
        if (this.isInTouch || this.isTouchEnd) {
            return;
        }
        this.isInTouch = true;
        console.log("按下");
        this.sp_yindao.visible = false;
        this.touchT = Date.now();
        this.ganSpeed = 1;
        Laya.timer.loop(30, this, this.onUpdate);
    };
    tantanView.prototype.onTouchUp = function () {
        if (this.isTouchEnd) {
            return;
        }
        console.log("抬起");
        this.isInTouch = false;
        this.isTouchEnd = true;
        var now = Date.now();
        var timeDeff = now - this.touchT;
        this.ganSpeed = 0;
        Laya.timer.clear(this, this.onUpdate);
        Laya.Tween.to(this.sp_gan, { y: 948 }, 80, null, Laya.Handler.create(this, this.starrtShot));
    };
    tantanView.prototype.onUpdate = function () {
        //每间隔一段时间创建一个盒子
        console.log("更新");
        if (this.isInTouch) {
            if (this.sp_gan.y < 1000) {
                this.sp_gan.y += this.ganSpeed;
            }
        }
    };
    tantanView.prototype.starrtShot = function () {
        this.sp_ganBall.visible = false;
        this._control.startGame();
    };
    /**停止游戏 */
    tantanView.prototype.stopGame = function () {
        console.log("结束游戏");
        // this.tipLbll.visible = true;
        // this.tipLbll.text = "游戏结束了，点击屏幕重新开始";
        this._control.stopGame();
    };
    tantanView.prototype.pauseGame = function () {
        console.log("暂停游戏");
        this.Mparent.openPause();
        // Laya["Physics"] && Laya["Physics"].I.stop();
        this._control.pause();
    };
    tantanView.prototype.rePause = function () {
        // Laya["Physics"] && Laya["Physics"].enable();
        console.log("继续游戏");
        // Laya["Physics"] && Laya["Physics"].I.start({gravity:10});
        this._control.repause();
    };
    return tantanView;
}(layaMaxUI_1.ui.game.GameViewSkinUI));
exports.default = tantanView;
},{"../../ui/layaMaxUI":19,"../GameControl":6}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var GameData_1 = require("../GameData");
var LotteryRuleView = /** @class */ (function (_super) {
    __extends(LotteryRuleView, _super);
    function LotteryRuleView(parent) {
        var _this = _super.call(this) || this;
        _this.thisDisplay = new layaMaxUI_1.ui.lottery.LotteryRuleSkinUI();
        _this._Mparent = parent;
        var bg = new Laya.Sprite();
        bg.width = 640;
        bg.height = 1200;
        bg.graphics.drawRect(-100, -100, 1500, 1500, "#000000");
        bg.alpha = 0.6;
        _this.addChild(bg);
        console.log("添加显示rule");
        return _this;
    }
    // private myConncet: iugame.MyConnect; 
    LotteryRuleView.prototype.onEnable = function () {
        console.log("onEnable rule");
        //点击提示文字，开始游戏
        this.thisDisplay.popup(true, true);
        this.addChild(this.thisDisplay);
        this.fitSceen();
        this.startAni();
        this.thisDisplay.btn_close.on(Laya.Event.CLICK, this, this.closeMe);
    };
    LotteryRuleView.prototype.close = function () {
        //super.close();
        //console.log("close start");
        // this.timeLine.destroy();
        // App.SoundManager.stopAll();
    };
    LotteryRuleView.prototype.initData = function () {
        // super.initData();
        // console.log("initData");
    };
    LotteryRuleView.prototype.initUI = function () {
        // super.initUI();
        // this.thisDisplay.btn_startGame.on(Laya.Event.CLICK, this, this.startGame);
        // this.thisDisplay.btn_instruct.on(Laya.Event.CLICK, this, this.openRul);
        // this.thisDisplay.btn_myPrize.on(Laya.Event.CLICK, this, this.openGift);
        // this.thisDisplay.btn_lottery.on(Laya.Event.CLICK, this, this.gotoLottery);
    };
    /**屏幕适配 */
    LotteryRuleView.prototype.fitSceen = function () {
        console.log("长宽比" + GameData_1.default.Screen_H_W_Ratio);
        // if (GameData.Screen_H_W_Ratio < 1.4) {
        //     this.thisDisplay.box_head.y = -10;
        //     this.thisDisplay.box_bottom.y = -180;
        // } else if (GameData.Screen_H_W_Ratio < 1.5) {
        //     this.thisDisplay.box_head.y = -10;
        //     this.thisDisplay.box_bottom.y = -160;
        // } else if (GameData.Screen_H_W_Ratio < 1.6) {
        //     this.thisDisplay.box_head.y = -5;
        //     this.thisDisplay.box_bottom.y = -140;
        // } else if (GameData.Screen_H_W_Ratio < 1.7) {
        //     this.thisDisplay.box_bottom.y = -100;
        // }
    };
    /**开场动画 */
    LotteryRuleView.prototype.startAni = function () {
    };
    LotteryRuleView.prototype.closeMe = function () {
        this.thisDisplay.close();
        this.destroy();
    };
    return LotteryRuleView;
}(Laya.Sprite));
exports.default = LotteryRuleView;
},{"../../ui/layaMaxUI":19,"../GameData":7}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var LotteryRuleView_1 = require("./LotteryRuleView");
var LotteryView = /** @class */ (function (_super) {
    __extends(LotteryView, _super);
    function LotteryView(parent) {
        var _this = _super.call(this) || this;
        _this.thisDisplay = new layaMaxUI_1.ui.lottery.LotteryViewSkinUI();
        _this._Mparent = parent;
        var bg = new Laya.Sprite();
        bg.width = 640;
        bg.height = 1200;
        bg.graphics.drawRect(-100, -100, 1500, 1500, "#000000");
        bg.alpha = 0.6;
        _this.addChild(bg);
        console.log("添加显示start");
        return _this;
    }
    // private myConncet: iugame.MyConnect; 
    LotteryView.prototype.open = function () {
        var param = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            param[_i] = arguments[_i];
        }
        this.fitSceen();
        this.startAni();
        // this.login();
        // App.ViewManager.open(ViewConst.Start_sign);
    };
    LotteryView.prototype.onEnable = function () {
        console.log("onEnable sing");
        //点击提示文字，开始游戏
        this.thisDisplay.popup(true, true);
        this.addChild(this.thisDisplay);
        this.fitSceen();
        this.startAni();
        this.thisDisplay.btn_close.on(Laya.Event.CLICK, this, this.closeMe);
        this.thisDisplay.img_gotoRule.on(Laya.Event.CLICK, this, this.openRule);
    };
    LotteryView.prototype.close = function () {
        //super.close();
        //console.log("close start");
        // this.timeLine.destroy();
        // App.SoundManager.stopAll();
    };
    LotteryView.prototype.initData = function () {
        // super.initData();
        // console.log("initData");
    };
    LotteryView.prototype.initUI = function () {
        // super.initUI();
        // this.thisDisplay.btn_startGame.on(Laya.Event.CLICK, this, this.startGame);
        // this.thisDisplay.btn_instruct.on(Laya.Event.CLICK, this, this.openRul);
        // this.thisDisplay.btn_myPrize.on(Laya.Event.CLICK, this, this.openGift);
        // this.thisDisplay.btn_lottery.on(Laya.Event.CLICK, this, this.gotoLottery);
    };
    /**屏幕适配 */
    LotteryView.prototype.fitSceen = function () {
        // console.log("长宽比" + GameData.Screen_H_W_Ratio);
        // if (GameData.Screen_H_W_Ratio < 1.4) {
        //     this.thisDisplay.box_head.y = -10;
        //     this.thisDisplay.box_bottom.y = -180;
        // } else if (GameData.Screen_H_W_Ratio < 1.5) {
        //     this.thisDisplay.box_head.y = -10;
        //     this.thisDisplay.box_bottom.y = -160;
        // } else if (GameData.Screen_H_W_Ratio < 1.6) {
        //     this.thisDisplay.box_head.y = -5;
        //     this.thisDisplay.box_bottom.y = -140;
        // } else if (GameData.Screen_H_W_Ratio < 1.7) {
        //     this.thisDisplay.box_bottom.y = -100;
        // }
    };
    LotteryView.prototype.closeMe = function () {
        this.thisDisplay.close();
        this.destroy();
    };
    /**开场动画 */
    LotteryView.prototype.startAni = function () {
        //    this.anPivot(this.thisDisplay.img_title);
        //this.thisDisplay.btn_goldweek.rotation=0;
        // this.timeLine = new Laya.TimeLine();
        // this.timeLine
        //     .addLabel("rabbite11", 0).to(this.thisDisplay.img_box, { rotation:5 }, 50, Laya.Ease.backOut, 2000)
        //     .addLabel("rabbite11", 0).to(this.thisDisplay.img_box, { rotation:-5 }, 100, Laya.Ease.backOut, 0)
        //     .addLabel("rabbite11", 0).to(this.thisDisplay.img_box, { rotation:5 }, 100, Laya.Ease.backOut, 0)
        //     .addLabel("rabbite11", 0).to(this.thisDisplay.img_box, { rotation:-5 }, 100, Laya.Ease.backOut, 0)
        //     .addLabel("rabbite11", 0).to(this.thisDisplay.img_box, { rotation:-0 }, 50, Laya.Ease.backOut, 0)
        //     .addLabel("rabbite11", 0).to(this.thisDisplay.img_box, { scaleX: 1.5, scaleY: 1.5 }, 200, Laya.Ease.backOut, 300)
        //     .addLabel("rabbite12", 0).to(this.thisDisplay.img_box, { scaleX: 1, scaleY: 1 }, 200, Laya.Ease.backIn, 500)
        // this.timeLine.play(0, true);
        // // this.thisDisplay.flag.play();
        // this.thisDisplay.flag1.play();
        // this.thisDisplay.flag2.play();
        // this.thisDisplay.img_stairs.y = 1707;
        // this.thisDisplay.img_cloud.scale(0, 0);
        // this.thisDisplay.img_tower.scale(0, 0);
        // this.thisDisplay.img_title.scale(0, 0);
        // this.thisDisplay.img_climb.scale(0, 0);
        // this.thisDisplay.btn_climb.scale(0, 0);
        // this.thisDisplay.btn_share.scale(0, 0);
        // Laya.Tween.to(this.thisDisplay.img_cloud, { scaleX: 1, scaleY: 1 }, 200, Laya.Ease.backOut, null, 200);
        // Laya.Tween.to(this.thisDisplay.img_tower, { scaleX: 1, scaleY: 1 }, 200, Laya.Ease.backOut, null, 600);
        // Laya.Tween.to(this.thisDisplay.img_title, { scaleX: 1, scaleY: 1 }, 200, Laya.Ease.backOut, null, 800);
        // Laya.Tween.to(this.thisDisplay.btn_climb, { scaleX: 1, scaleY: 1 }, 200, Laya.Ease.backOut, null, 900);
        // Laya.Tween.to(this.thisDisplay.img_climb, { scaleX: 1, scaleY: 1 }, 200, Laya.Ease.backOut, null, 950);
        // Laya.Tween.to(this.thisDisplay.btn_share, { scaleX: 1, scaleY: 1 }, 200, Laya.Ease.backOut, null, 1000);
    };
    LotteryView.prototype.openRule = function () {
        console.log("点击规则按钮");
        this.ruleView = new LotteryRuleView_1.default(this);
        this.addChild(this.ruleView);
    };
    LotteryView.prototype.openSign = function () {
        console.log("sing");
    };
    LotteryView.prototype.onStart = function () {
    };
    return LotteryView;
}(Laya.Sprite));
exports.default = LotteryView;
},{"../../ui/layaMaxUI":19,"./LotteryRuleView":14}],16:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var GameData_1 = require("../GameData");
var RuleView = /** @class */ (function (_super) {
    __extends(RuleView, _super);
    function RuleView(parent) {
        var _this = _super.call(this) || this;
        _this.thisDisplay = new layaMaxUI_1.ui.start.RuleViewSkinUI();
        _this._Mparent = parent;
        var bg = new Laya.Sprite();
        bg.width = 640;
        bg.height = 1200;
        bg.graphics.drawRect(-100, -100, 1500, 1500, "#000000");
        bg.alpha = 0.6;
        _this.addChild(bg);
        console.log("添加显示rule");
        return _this;
    }
    // private myConncet: iugame.MyConnect; 
    RuleView.prototype.onEnable = function () {
        console.log("onEnable rule");
        //点击提示文字，开始游戏
        this.thisDisplay.popup(true, true);
        this.addChild(this.thisDisplay);
        this.fitSceen();
        this.startAni();
        this.thisDisplay.btn_close.on(Laya.Event.CLICK, this, this.closeMe);
    };
    RuleView.prototype.close = function () {
        //super.close();
        //console.log("close start");
        // this.timeLine.destroy();
        // App.SoundManager.stopAll();
    };
    RuleView.prototype.initData = function () {
        // super.initData();
        // console.log("initData");
    };
    RuleView.prototype.initUI = function () {
        // super.initUI();
        // this.thisDisplay.btn_startGame.on(Laya.Event.CLICK, this, this.startGame);
        // this.thisDisplay.btn_instruct.on(Laya.Event.CLICK, this, this.openRul);
        // this.thisDisplay.btn_myPrize.on(Laya.Event.CLICK, this, this.openGift);
        // this.thisDisplay.btn_lottery.on(Laya.Event.CLICK, this, this.gotoLottery);
    };
    /**屏幕适配 */
    RuleView.prototype.fitSceen = function () {
        console.log("长宽比" + GameData_1.default.Screen_H_W_Ratio);
        // if (GameData.Screen_H_W_Ratio < 1.4) {
        //     this.thisDisplay.box_head.y = -10;
        //     this.thisDisplay.box_bottom.y = -180;
        // } else if (GameData.Screen_H_W_Ratio < 1.5) {
        //     this.thisDisplay.box_head.y = -10;
        //     this.thisDisplay.box_bottom.y = -160;
        // } else if (GameData.Screen_H_W_Ratio < 1.6) {
        //     this.thisDisplay.box_head.y = -5;
        //     this.thisDisplay.box_bottom.y = -140;
        // } else if (GameData.Screen_H_W_Ratio < 1.7) {
        //     this.thisDisplay.box_bottom.y = -100;
        // }
    };
    /**开场动画 */
    RuleView.prototype.startAni = function () {
    };
    RuleView.prototype.closeMe = function () {
        this.thisDisplay.close();
        this.destroy();
    };
    return RuleView;
}(Laya.Sprite));
exports.default = RuleView;
},{"../../ui/layaMaxUI":19,"../GameData":7}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var GameData_1 = require("../GameData");
var SignView = /** @class */ (function (_super) {
    __extends(SignView, _super);
    function SignView(parent) {
        var _this = _super.call(this) || this;
        _this.thisDisplay = new layaMaxUI_1.ui.start.SignViewSkinUI();
        _this._Mparent = parent;
        var bg = new Laya.Sprite();
        bg.width = 640;
        bg.height = 1200;
        bg.graphics.drawRect(-100, -100, 1500, 1500, "#000000");
        bg.alpha = 0.6;
        _this.addChild(bg);
        console.log("添加显示rule");
        return _this;
    }
    // private myConncet: iugame.MyConnect; 
    SignView.prototype.onEnable = function () {
        console.log("onEnable sing");
        //点击提示文字，开始游戏
        this.thisDisplay.popup(true, true);
        this.addChild(this.thisDisplay);
        this.fitSceen();
        this.startAni();
        this.thisDisplay.btn_close.on(Laya.Event.CLICK, this, this.closeMe);
    };
    SignView.prototype.close = function () {
        //super.close();
        //console.log("close start");
        // this.timeLine.destroy();
        // App.SoundManager.stopAll();
    };
    SignView.prototype.initData = function () {
        // super.initData();
        // console.log("initData");
    };
    SignView.prototype.initUI = function () {
        // super.initUI();
        // this.thisDisplay.btn_startGame.on(Laya.Event.CLICK, this, this.startGame);
        // this.thisDisplay.btn_instruct.on(Laya.Event.CLICK, this, this.openRul);
        // this.thisDisplay.btn_myPrize.on(Laya.Event.CLICK, this, this.openGift);
        // this.thisDisplay.btn_lottery.on(Laya.Event.CLICK, this, this.gotoLottery);
    };
    /**屏幕适配 */
    SignView.prototype.fitSceen = function () {
        console.log("长宽比" + GameData_1.default.Screen_H_W_Ratio);
        // if (GameData.Screen_H_W_Ratio < 1.4) {
        //     this.thisDisplay.box_head.y = -10;
        //     this.thisDisplay.box_bottom.y = -180;
        // } else if (GameData.Screen_H_W_Ratio < 1.5) {
        //     this.thisDisplay.box_head.y = -10;
        //     this.thisDisplay.box_bottom.y = -160;
        // } else if (GameData.Screen_H_W_Ratio < 1.6) {
        //     this.thisDisplay.box_head.y = -5;
        //     this.thisDisplay.box_bottom.y = -140;
        // } else if (GameData.Screen_H_W_Ratio < 1.7) {
        //     this.thisDisplay.box_bottom.y = -100;
        // }
    };
    /**开场动画 */
    SignView.prototype.startAni = function () {
    };
    SignView.prototype.closeMe = function () {
        this.thisDisplay.close();
        this.destroy();
    };
    return SignView;
}(Laya.Sprite));
exports.default = SignView;
},{"../../ui/layaMaxUI":19,"../GameData":7}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var RuleView_1 = require("./RuleView");
var SignView_1 = require("./SignView");
var TouchEff_1 = require("../TouchEff");
var StartView = /** @class */ (function (_super) {
    __extends(StartView, _super);
    function StartView(parent) {
        var _this = _super.call(this) || this;
        _this.ballNum = 10;
        _this.thisDisplay = new layaMaxUI_1.ui.start.StartViewSkinUI();
        _this.addChild(_this.thisDisplay);
        _this._Mparent = parent;
        console.log("添加显示start");
        return _this;
    }
    //private myConncet: iugame.MyConnect; 
    StartView.prototype.onEnable = function () {
        console.log("onEnable start");
        this.fitSceen();
        this.startAni();
        //点击提示文字，开始游戏
        TouchEff_1.default.segEff(this.thisDisplay.btn_share);
        TouchEff_1.default.segEff(this.thisDisplay.btn_rule);
        TouchEff_1.default.segEff(this.thisDisplay.btn_start);
        TouchEff_1.default.segEff(this.thisDisplay.btn_lottery);
        this.thisDisplay.btn_rule.on(Laya.Event.CLICK, this, this.openRule);
        this.thisDisplay.btn_start.on(Laya.Event.CLICK, this, this.openGame);
        this.thisDisplay.btn_share.on(Laya.Event.CLICK, this, this.gotoShare);
        this.thisDisplay.btn_lottery.on(Laya.Event.CLICK, this, this.openLottery);
        this.openSign();
        this.updateData();
    };
    /**屏幕适配 */
    StartView.prototype.fitSceen = function () {
        // console.log("长宽比" + GameData.Screen_H_W_Ratio);
        // if (GameData.Screen_H_W_Ratio < 1.4) {
        //     this.thisDisplay.box_head.y = -10;
        //     this.thisDisplay.box_bottom.y = -180;
        // } else if (GameData.Screen_H_W_Ratio < 1.5) {
        //     this.thisDisplay.box_head.y = -10;
        //     this.thisDisplay.box_bottom.y = -160;
        // } else if (GameData.Screen_H_W_Ratio < 1.6) {
        //     this.thisDisplay.box_head.y = -5;
        //     this.thisDisplay.box_bottom.y = -140;
        // } else if (GameData.Screen_H_W_Ratio < 1.7) {
        //     this.thisDisplay.box_bottom.y = -100;
        // }
    };
    /**开场动画 */
    StartView.prototype.startAni = function () {
        this.thisDisplay.lab_addScore.visible = false;
        //this.anPivot(this.thisDisplay.img_title);
        //this.thisDisplay.btn_goldweek.rotation=0;
        // this.timeLine = new Laya.TimeLine();
        // this.timeLine
        //     .addLabel("rabbite11", 0).to(this.thisDisplay.img_box, { rotation:5 }, 50, Laya.Ease.backOut, 2000)
        //     .addLabel("rabbite11", 0).to(this.thisDisplay.img_box, { rotation:-5 }, 100, Laya.Ease.backOut, 0)
        //     .addLabel("rabbite11", 0).to(this.thisDisplay.img_box, { rotation:5 }, 100, Laya.Ease.backOut, 0)
        //     .addLabel("rabbite11", 0).to(this.thisDisplay.img_box, { rotation:-5 }, 100, Laya.Ease.backOut, 0)
        //     .addLabel("rabbite11", 0).to(this.thisDisplay.img_box, { rotation:-0 }, 50, Laya.Ease.backOut, 0)
        //     .addLabel("rabbite11", 0).to(this.thisDisplay.img_box, { scaleX: 1.5, scaleY: 1.5 }, 200, Laya.Ease.backOut, 300)
        //     .addLabel("rabbite12", 0).to(this.thisDisplay.img_box, { scaleX: 1, scaleY: 1 }, 200, Laya.Ease.backIn, 500)
        // this.timeLine.play(0, true);
        // // this.thisDisplay.flag.play();
        // this.thisDisplay.flag1.play();
        // this.thisDisplay.flag2.play();
        // this.thisDisplay.img_stairs.y = 1707;
        // this.thisDisplay.img_cloud.scale(0, 0);
        // this.thisDisplay.img_tower.scale(0, 0);
        // this.thisDisplay.img_title.scale(0, 0);
        // this.thisDisplay.img_climb.scale(0, 0);
        // this.thisDisplay.btn_climb.scale(0, 0);
        // this.thisDisplay.btn_share.scale(0, 0);
        // Laya.Tween.to(this.thisDisplay.img_cloud, { scaleX: 1, scaleY: 1 }, 200, Laya.Ease.backOut, null, 200);
        // Laya.Tween.to(this.thisDisplay.img_tower, { scaleX: 1, scaleY: 1 }, 200, Laya.Ease.backOut, null, 600);
        // Laya.Tween.to(this.thisDisplay.img_title, { scaleX: 1, scaleY: 1 }, 200, Laya.Ease.backOut, null, 800);
        // Laya.Tween.to(this.thisDisplay.btn_climb, { scaleX: 1, scaleY: 1 }, 200, Laya.Ease.backOut, null, 900);
        // Laya.Tween.to(this.thisDisplay.img_climb, { scaleX: 1, scaleY: 1 }, 200, Laya.Ease.backOut, null, 950);
        // Laya.Tween.to(this.thisDisplay.btn_share, { scaleX: 1, scaleY: 1 }, 200, Laya.Ease.backOut, null, 1000);
    };
    /**更新数据 */
    StartView.prototype.updateData = function () {
        var timeLine = new Laya.TimeLine();
        timeLine
            .addLabel("rabbite11", 0).to(this.thisDisplay.lab_ballNum, { scaleX: 1.3, scaleY: 1.3 }, 200, Laya.Ease.backOut, 0)
            .addLabel("rabbite11", 0).to(this.thisDisplay.lab_ballNum, { scaleX: 1, scaleY: 1 }, 200, Laya.Ease.backOut, 0);
        timeLine.play(0, false);
        this.thisDisplay.lab_ballNum.text = this.ballNum + "";
    };
    StartView.prototype.openRule = function () {
        console.log("点击规则按钮");
        this.ruleView = new RuleView_1.default(this);
        this.addChild(this.ruleView);
    };
    StartView.prototype.openSign = function () {
        console.log("sing");
        this.signView = new SignView_1.default(this);
        this.addChild(this.signView);
    };
    StartView.prototype.openGame = function () {
        this._Mparent.openGame(this.ballNum);
    };
    StartView.prototype.openLottery = function () {
        this._Mparent.openLottery();
    };
    StartView.prototype.gotoShare = function () {
        console.log("分享");
        this.thisDisplay.lab_addScore.visible = true;
        // this.thisDisplay.lab_addScore.scale(3,3);
        // Laya.Tween.to(this.thisDisplay.lab_addScore,{scaleX:0,scaleY:0},200,null,Laya.Handler.create(this,this.addBall));
        var timeLine = new Laya.TimeLine();
        timeLine
            .addLabel("rabbite11", 0).to(this.thisDisplay.lab_addScore, { scaleX: 5, scaleY: 5, alpha: 0.8 }, 200, Laya.Ease.backOut, 0)
            .addLabel("rabbite11", 0).to(this.thisDisplay.lab_addScore, { scaleX: 0.5, scaleY: 0.5 }, 200, Laya.Ease.backOut, 200);
        timeLine.play(0, false);
        timeLine.on(Laya.Event.COMPLETE, this, this.addBall);
    };
    StartView.prototype.addBall = function () {
        this.thisDisplay.lab_addScore.visible = false;
        this.ballNum += 5;
        this.updateData();
    };
    return StartView;
}(Laya.Sprite));
exports.default = StartView;
},{"../../ui/layaMaxUI":19,"../TouchEff":9,"./RuleView":16,"./SignView":17}],19:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var View = Laya.View;
var Dialog = Laya.Dialog;
var Scene = Laya.Scene;
var ui;
(function (ui) {
    var game;
    (function (game) {
        var GameOverSkin1UI = /** @class */ (function (_super) {
            __extends(GameOverSkin1UI, _super);
            function GameOverSkin1UI() {
                return _super.call(this) || this;
            }
            GameOverSkin1UI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(GameOverSkin1UI.uiView);
            };
            GameOverSkin1UI.uiView = { "type": "Dialog", "props": { "width": 640, "height": 1136 }, "compId": 1, "child": [{ "type": "Sprite", "props": { "y": 300, "x": 10, "texture": "game/overbg.png" }, "compId": 3 }, { "type": "Button", "props": { "y": 697, "x": 77, "var": "btn_retry", "stateNum": 1, "skin": "game/over.png" }, "compId": 2 }, { "type": "Label", "props": { "y": 522, "x": 338, "var": "lab_score", "text": "500", "fontSize": 50, "color": "#f15c5a", "bold": true }, "compId": 8 }, { "type": "Sprite", "props": { "y": 777, "x": 398, "texture": "game/over31.png" }, "compId": 11 }, { "type": "Sprite", "props": { "y": 635, "x": 169.5, "texture": "game/over22.png" }, "compId": 12 }, { "type": "Sprite", "props": { "y": 465, "x": 248.5, "texture": "game/over21.png" }, "compId": 13 }, { "type": "Sprite", "props": { "y": 530, "x": 233, "texture": "game/overtxt.png" }, "compId": 14 }, { "type": "Button", "props": { "y": 697, "x": 356, "stateNum": 1, "skin": "game/overprizebtnb.png" }, "compId": 16 }], "loadList": ["game/overbg.png", "game/over.png", "game/over31.png", "game/over22.png", "game/over21.png", "game/overtxt.png", "game/overprizebtnb.png"], "loadList3D": [], "components": [] };
            return GameOverSkin1UI;
        }(Dialog));
        game.GameOverSkin1UI = GameOverSkin1UI;
        var GameOverSkin2UI = /** @class */ (function (_super) {
            __extends(GameOverSkin2UI, _super);
            function GameOverSkin2UI() {
                return _super.call(this) || this;
            }
            GameOverSkin2UI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(GameOverSkin2UI.uiView);
            };
            GameOverSkin2UI.uiView = { "type": "Dialog", "props": { "width": 640, "height": 1136 }, "compId": 1, "child": [{ "type": "Button", "props": { "y": 210, "x": 515, "stateNum": 1, "skin": "start/closebtn.png" }, "compId": 9, "child": [{ "type": "Sprite", "props": { "y": 58, "x": 27, "width": 5, "texture": "lottery/closetiao.png", "height": 62 }, "compId": 10 }], "components": [] }, { "type": "Sprite", "props": { "y": 300, "x": 20, "texture": "game/overbg.png" }, "compId": 3 }, { "type": "Button", "props": { "y": 697, "x": 77, "var": "btn_retry", "stateNum": 1, "skin": "game/over.png" }, "compId": 2 }, { "type": "Button", "props": { "y": 697, "x": 356, "stateNum": 1, "skin": "game/overprizebtn.png" }, "compId": 7 }, { "type": "Label", "props": { "y": 522, "x": 338, "var": "lab_score", "text": "500", "fontSize": 50, "color": "#f15c5a", "bold": true }, "compId": 8 }, { "type": "Sprite", "props": { "y": 777, "x": 398, "texture": "game/over31.png" }, "compId": 11 }, { "type": "Sprite", "props": { "y": 465, "x": 187.5, "texture": "game/over32.png" }, "compId": 12 }, { "type": "Sprite", "props": { "y": 530, "x": 233, "texture": "game/overtxt.png" }, "compId": 13 }, { "type": "Sprite", "props": { "y": 635, "x": 173, "texture": "game/over33.png" }, "compId": 14 }], "loadList": ["start/closebtn.png", "lottery/closetiao.png", "game/overbg.png", "game/over.png", "game/overprizebtn.png", "game/over31.png", "game/over32.png", "game/overtxt.png", "game/over33.png"], "loadList3D": [], "components": [] };
            return GameOverSkin2UI;
        }(Dialog));
        game.GameOverSkin2UI = GameOverSkin2UI;
        var GameOverSkin3UI = /** @class */ (function (_super) {
            __extends(GameOverSkin3UI, _super);
            function GameOverSkin3UI() {
                return _super.call(this) || this;
            }
            GameOverSkin3UI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(GameOverSkin3UI.uiView);
            };
            GameOverSkin3UI.uiView = { "type": "Dialog", "props": { "width": 640, "height": 1136 }, "compId": 1, "child": [{ "type": "Button", "props": { "y": 210, "x": 515, "stateNum": 1, "skin": "start/closebtn.png" }, "compId": 9, "child": [{ "type": "Sprite", "props": { "y": 58, "x": 27, "width": 5, "texture": "lottery/closetiao.png", "height": 62 }, "compId": 10 }], "components": [] }, { "type": "Sprite", "props": { "y": 300, "x": 20, "texture": "game/overbg.png" }, "compId": 3 }, { "type": "Button", "props": { "y": 697, "x": 77, "var": "btn_retry", "stateNum": 1, "skin": "game/over.png" }, "compId": 2 }, { "type": "Button", "props": { "y": 697, "x": 356, "stateNum": 1, "skin": "game/overprizebtn.png" }, "compId": 7 }, { "type": "Label", "props": { "y": 522, "x": 338, "var": "lab_score", "text": "500", "fontSize": 50, "color": "#f15c5a", "bold": true }, "compId": 8 }, { "type": "Sprite", "props": { "y": 777, "x": 398, "texture": "game/over31.png" }, "compId": 11 }, { "type": "Sprite", "props": { "y": 635, "x": 154, "texture": "game/over11.png" }, "compId": 12 }, { "type": "Sprite", "props": { "y": 465, "x": 167, "texture": "game/over12.png" }, "compId": 13 }, { "type": "Sprite", "props": { "y": 530, "x": 233, "texture": "game/overtxt.png" }, "compId": 14 }], "loadList": ["start/closebtn.png", "lottery/closetiao.png", "game/overbg.png", "game/over.png", "game/overprizebtn.png", "game/over31.png", "game/over11.png", "game/over12.png", "game/overtxt.png"], "loadList3D": [], "components": [] };
            return GameOverSkin3UI;
        }(Dialog));
        game.GameOverSkin3UI = GameOverSkin3UI;
        var GamePauseSkinUI = /** @class */ (function (_super) {
            __extends(GamePauseSkinUI, _super);
            function GamePauseSkinUI() {
                return _super.call(this) || this;
            }
            GamePauseSkinUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(GamePauseSkinUI.uiView);
            };
            GamePauseSkinUI.uiView = { "type": "Dialog", "props": { "width": 640, "height": 1136 }, "compId": 1, "child": [{ "type": "Sprite", "props": { "y": 378.5, "x": 26, "texture": "lottery/planbg.png", "sizeGrid": "32,26,61,29" }, "compId": 3 }, { "type": "Sprite", "props": { "y": 437, "x": 172, "texture": "game/pausetxt.png" }, "compId": 6 }, { "type": "Button", "props": { "y": 630, "x": 71.5, "var": "btn_retry", "stateNum": 1, "skin": "game/over.png" }, "compId": 2 }, { "type": "Button", "props": { "y": 630, "x": 348, "var": "btn_goon", "stateNum": 1, "skin": "game/goonbtn.png" }, "compId": 7 }, { "type": "Label", "props": { "y": 431, "x": 367.5771484375, "var": "lab_score", "text": "500", "fontSize": 50, "color": "#f15c5a", "bold": true }, "compId": 8 }], "loadList": ["lottery/planbg.png", "game/pausetxt.png", "game/over.png", "game/goonbtn.png"], "loadList3D": [], "components": [] };
            return GamePauseSkinUI;
        }(Dialog));
        game.GamePauseSkinUI = GamePauseSkinUI;
        var GameViewSkinUI = /** @class */ (function (_super) {
            __extends(GameViewSkinUI, _super);
            function GameViewSkinUI() {
                return _super.call(this) || this;
            }
            GameViewSkinUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(GameViewSkinUI.uiView);
            };
            GameViewSkinUI.uiView = { "type": "View", "props": { "width": 640, "runtime": "script/GameUI.ts", "name": "gameBox", "height": 1136 }, "compId": 1, "child": [{ "type": "Sprite", "props": { "y": 1116, "x": -83, "width": 805, "texture": "test/block.png", "name": "ground", "height": 20 }, "compId": 3, "child": [{ "type": "Script", "props": { "y": 0, "x": 0, "width": 805, "restitution": 0, "label": "ground", "isSensor": false, "height": 20, "runtime": "laya.physics.BoxCollider" }, "compId": 5 }, { "type": "Script", "props": { "type": "static", "group": 1, "runtime": "laya.physics.RigidBody" }, "compId": 6 }], "components": [] }, { "type": "Sprite", "props": { "y": -0.25, "x": -0.5, "texture": "game/gameBg.jpg" }, "compId": 54 }, { "type": "Sprite", "props": { "y": 52, "x": -13 }, "compId": 26, "child": [{ "type": "Script", "props": { "y": 154, "x": 512, "restitution": 1, "points": "-66,-110,3,-58,36,-10,55,44,60,92,59,973", "runtime": "laya.physics.ChainCollider" }, "compId": 21 }, { "type": "Script", "props": { "y": -52, "x": 13, "type": "static", "group": 1, "runtime": "laya.physics.RigidBody" }, "compId": 22 }, { "type": "Script", "props": { "y": -18, "x": 400, "restitution": 1, "points": "-5,-14,42,-4,75,11,115,35,159,78,197,124,220,184,234,228,235,1163", "runtime": "laya.physics.ChainCollider" }, "compId": 23 }, { "type": "Script", "props": { "y": -18, "x": 27.5, "restitution": 1, "points": "-13,1164,-14,201,49,230,47,188,21,158,37,141,40,110,69,70,83,54,100,39,121,22,146,9,202,-9,248,-19,303,-23,371,-12,421,66", "runtime": "laya.physics.ChainCollider" }, "compId": 24 }], "components": [] }, { "type": "Sprite", "props": { "y": 0, "x": 0, "name": "gameBox" }, "compId": 18 }, { "type": "Sprite", "props": { "y": 0, "x": 0, "name": "UI" }, "compId": 15, "child": [{ "type": "Sprite", "props": { "y": 21.25, "x": 488, "texture": "game/scorebg.png" }, "compId": 60, "child": [{ "type": "Label", "props": { "y": 12, "x": -13, "width": 181, "var": "scoreLbl", "text": "111", "strokeColor": "#c5201c", "stroke": 8, "height": 58, "fontSize": 50, "color": "#ffffff", "bold": true, "align": "center" }, "compId": 17 }], "components": [] }, { "type": "Sprite", "props": { "y": 22, "x": 19, "var": "sp_pause", "texture": "game/pause.png" }, "compId": 61 }, { "type": "Sprite", "props": { "y": 70, "x": 341, "texture": "game/jiantou.png" }, "compId": 62 }, { "type": "Sprite", "props": { "y": 948, "x": 572, "var": "sp_gan", "texture": "game/tan.png" }, "compId": 63, "child": [{ "type": "Sprite", "props": { "y": -37, "x": 3.75, "var": "sp_ganBall", "texture": "game/ball.png" }, "compId": 64 }], "components": [] }, { "type": "Sprite", "props": { "y": 0, "x": 0, "width": 700, "var": "sp_yindao", "height": 1300, "alpha": 0.6 }, "compId": 58, "child": [{ "type": "Rect", "props": { "y": -26, "x": -15, "width": 688, "lineWidth": 1, "height": 1410, "fillColor": "#000000" }, "compId": 57 }, { "type": "Sprite", "props": { "y": 547, "x": 159, "texture": "game/yindao.png" }, "compId": 59 }], "components": [] }], "components": [] }, { "type": "Script", "props": { "y": -1, "x": 0, "enabled": true, "dropBox3": "@Prefab:prefab/DropBox3.prefab", "dropBox2": "@Prefab:prefab/DropBox2.prefab", "dropBox": "@Prefab:prefab/DropBox.prefab", "bullet": "@Prefab:prefab/Bullet.prefab", "runtime": "script/GameControl.ts" }, "compId": 20 }], "loadList": ["test/block.png", "game/gameBg.jpg", "game/scorebg.png", "game/pause.png", "game/jiantou.png", "game/tan.png", "game/ball.png", "game/yindao.png", "prefab/DropBox3.prefab", "prefab/DropBox2.prefab", "prefab/DropBox.prefab", "prefab/Bullet.prefab"], "loadList3D": [], "components": [] };
            return GameViewSkinUI;
        }(View));
        game.GameViewSkinUI = GameViewSkinUI;
    })(game = ui.game || (ui.game = {}));
})(ui = exports.ui || (exports.ui = {}));
(function (ui) {
    var lottery;
    (function (lottery) {
        var LotteryRuleSkinUI = /** @class */ (function (_super) {
            __extends(LotteryRuleSkinUI, _super);
            function LotteryRuleSkinUI() {
                return _super.call(this) || this;
            }
            LotteryRuleSkinUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(LotteryRuleSkinUI.uiView);
            };
            LotteryRuleSkinUI.uiView = { "type": "Dialog", "props": { "width": 640, "height": 1136 }, "compId": 1, "child": [{ "type": "Button", "props": { "y": 261, "x": 527, "var": "btn_close", "stateNum": 1, "skin": "start/closebtn.png" }, "compId": 2, "child": [{ "type": "Sprite", "props": { "y": 58, "x": 27, "width": 5, "texture": "lottery/closetiao.png", "height": 62 }, "compId": 4 }], "components": [] }, { "type": "Sprite", "props": { "y": 378.5, "x": 26, "texture": "lottery/planbg.png", "sizeGrid": "32,26,61,29" }, "compId": 3 }, { "type": "Sprite", "props": { "y": 428, "x": 96, "texture": "lottery/lotteryrule.png" }, "compId": 5 }], "loadList": ["start/closebtn.png", "lottery/closetiao.png", "lottery/planbg.png", "lottery/lotteryrule.png"], "loadList3D": [], "components": [] };
            return LotteryRuleSkinUI;
        }(Dialog));
        lottery.LotteryRuleSkinUI = LotteryRuleSkinUI;
        var LotteryViewSkinUI = /** @class */ (function (_super) {
            __extends(LotteryViewSkinUI, _super);
            function LotteryViewSkinUI() {
                return _super.call(this) || this;
            }
            LotteryViewSkinUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(LotteryViewSkinUI.uiView);
            };
            LotteryViewSkinUI.uiView = { "type": "Dialog", "props": { "width": 640, "height": 1136 }, "compId": 1, "child": [{ "type": "Sprite", "props": { "y": 75, "x": 11.5, "texture": "lottery/lotterybg.png" }, "compId": 3 }, { "type": "Sprite", "props": { "y": 351, "x": 99, "width": 442, "var": "img_gotoRule", "height": 124 }, "compId": 14, "child": [{ "type": "Label", "props": { "y": 24, "x": 255, "var": "lab_score", "text": "456", "fontSize": 50, "color": "#ef4f4c", "bold": true }, "compId": 11 }], "components": [] }, { "type": "Button", "props": { "y": 115, "x": 508.5, "var": "btn_close", "stateNum": 1, "skin": "start/closebtn.png" }, "compId": 2 }, { "type": "Sprite", "props": { "y": 171, "x": 536, "texture": "lottery/closetiao.png" }, "compId": 4 }, { "type": "Sprite", "props": { "y": 608, "x": 107, "texture": "lottery/prize1.png" }, "compId": 5, "child": [{ "type": "Sprite", "props": { "y": -6, "x": 324, "texture": "lottery/lotterybtn.png" }, "compId": 8 }, { "type": "Label", "props": { "y": 0, "x": 128, "text": "奖品111", "fontSize": 30 }, "compId": 12 }, { "type": "Label", "props": { "y": 42, "x": 128, "text": "消耗600积分", "fontSize": 30, "color": "#ff1410" }, "compId": 13 }], "components": [] }, { "type": "Sprite", "props": { "y": 744, "x": 107, "texture": "lottery/prize1.png" }, "compId": 15, "child": [{ "type": "Sprite", "props": { "y": -6, "x": 324, "texture": "lottery/lotterybtn.png" }, "compId": 16 }, { "type": "Label", "props": { "y": 0, "x": 128, "text": "奖品111", "fontSize": 30 }, "compId": 17 }, { "type": "Label", "props": { "y": 42, "x": 128, "text": "消耗1200积分", "fontSize": 30, "color": "#ff1410" }, "compId": 18 }], "components": [] }, { "type": "Sprite", "props": { "y": 887, "x": 107, "texture": "lottery/prize1.png" }, "compId": 19, "child": [{ "type": "Sprite", "props": { "y": -6, "x": 324, "texture": "lottery/lotterybtn.png" }, "compId": 20 }, { "type": "Label", "props": { "y": 0, "x": 128, "text": "奖品111", "fontSize": 30 }, "compId": 21 }, { "type": "Label", "props": { "y": 42, "x": 128, "text": "消耗2000积分", "fontSize": 30, "color": "#ff1410" }, "compId": 22 }], "components": [] }], "loadList": ["lottery/lotterybg.png", "start/closebtn.png", "lottery/closetiao.png", "lottery/prize1.png", "lottery/lotterybtn.png"], "loadList3D": [], "components": [] };
            return LotteryViewSkinUI;
        }(Dialog));
        lottery.LotteryViewSkinUI = LotteryViewSkinUI;
    })(lottery = ui.lottery || (ui.lottery = {}));
})(ui = exports.ui || (exports.ui = {}));
(function (ui) {
    var start;
    (function (start) {
        var RuleViewSkinUI = /** @class */ (function (_super) {
            __extends(RuleViewSkinUI, _super);
            function RuleViewSkinUI() {
                return _super.call(this) || this;
            }
            RuleViewSkinUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(RuleViewSkinUI.uiView);
            };
            RuleViewSkinUI.uiView = { "type": "Dialog", "props": { "width": 640, "height": 1136 }, "compId": 1, "child": [{ "type": "Sprite", "props": { "y": 280, "x": 26, "width": 588, "texture": "lottery/planbg.png", "height": 627, "sizeGrid": "32,26,61,29" }, "compId": 3 }, { "type": "Button", "props": { "y": 212, "x": 526, "var": "btn_close", "stateNum": 1, "skin": "start/closebtn.png" }, "compId": 2 }], "loadList": ["lottery/planbg.png", "start/closebtn.png"], "loadList3D": [], "components": [] };
            return RuleViewSkinUI;
        }(Dialog));
        start.RuleViewSkinUI = RuleViewSkinUI;
        var SignViewSkinUI = /** @class */ (function (_super) {
            __extends(SignViewSkinUI, _super);
            function SignViewSkinUI() {
                return _super.call(this) || this;
            }
            SignViewSkinUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(SignViewSkinUI.uiView);
            };
            SignViewSkinUI.uiView = { "type": "Dialog", "props": { "width": 640, "height": 1136 }, "compId": 1, "child": [{ "type": "Sprite", "props": { "y": 162.5, "x": 26.5, "texture": "start/loginbg.png" }, "compId": 2 }, { "type": "Label", "props": { "y": 937, "x": 78, "width": 463, "text": "已签到2天，连续签到保卫球数量递增", "height": 34, "fontSize": 24, "color": "#000c69", "align": "center" }, "compId": 4 }, { "type": "Button", "props": { "y": 108, "x": 492, "var": "btn_close", "stateNum": 1, "skin": "start/closebtn.png" }, "compId": 5 }, { "type": "Sprite", "props": { "y": 449, "x": 62, "texture": "start/loginitembg.png" }, "compId": 3, "child": [{ "type": "Label", "props": { "y": 5, "x": 32, "width": 61, "text": "第一天", "height": 23, "fontSize": 18, "color": "#ffffff", "bold": true, "align": "center" }, "compId": 6 }, { "type": "Label", "props": { "y": 57, "x": 38, "text": "保卫球", "strokeColor": "#fdfdfd", "stroke": 2, "fontSize": 15, "color": "#ff5c45", "bold": true }, "compId": 7 }, { "type": "Label", "props": { "y": 76, "x": 39, "width": 46, "text": "+1", "strokeColor": "#fdfdfd", "stroke": 2, "height": 15, "fontSize": 15, "color": "#ff5c45", "bold": true, "align": "center" }, "compId": 8 }, { "type": "Sprite", "props": { "y": 34, "x": 25, "texture": "start/loginflag.png" }, "compId": 9 }], "components": [] }, { "type": "Sprite", "props": { "y": 449, "x": 194, "texture": "start/loginitembg.png" }, "compId": 10, "child": [{ "type": "Label", "props": { "y": 5, "x": 32, "width": 61, "text": "第一天", "height": 23, "fontSize": 18, "color": "#ffffff", "bold": true, "align": "center" }, "compId": 11 }, { "type": "Label", "props": { "y": 57, "x": 38, "text": "保卫球", "strokeColor": "#fdfdfd", "stroke": 2, "fontSize": 15, "color": "#ff5c45", "bold": true }, "compId": 12 }, { "type": "Label", "props": { "y": 76, "x": 39, "width": 46, "text": "+1", "strokeColor": "#fdfdfd", "stroke": 2, "height": 15, "fontSize": 15, "color": "#ff5c45", "bold": true, "align": "center" }, "compId": 13 }, { "type": "Sprite", "props": { "y": 34, "x": 25, "texture": "start/loginflag.png" }, "compId": 14 }], "components": [] }, { "type": "Sprite", "props": { "y": 449, "x": 327, "texture": "start/loginitembg.png" }, "compId": 15, "child": [{ "type": "Label", "props": { "y": 5, "x": 32, "width": 61, "text": "第一天", "height": 23, "fontSize": 18, "color": "#ffffff", "bold": true, "align": "center" }, "compId": 16 }, { "type": "Label", "props": { "y": 57, "x": 38, "text": "保卫球", "strokeColor": "#fdfdfd", "stroke": 2, "fontSize": 15, "color": "#ff5c45", "bold": true }, "compId": 17 }, { "type": "Label", "props": { "y": 76, "x": 39, "width": 46, "text": "+1", "strokeColor": "#fdfdfd", "stroke": 2, "height": 15, "fontSize": 15, "color": "#ff5c45", "bold": true, "align": "center" }, "compId": 18 }, { "type": "Sprite", "props": { "y": 34, "x": 25, "texture": "start/loginflag.png" }, "compId": 19 }], "components": [] }, { "type": "Sprite", "props": { "y": 449, "x": 459, "texture": "start/loginitembg.png" }, "compId": 20, "child": [{ "type": "Label", "props": { "y": 5, "x": 32, "width": 61, "text": "第一天", "height": 23, "fontSize": 18, "color": "#ffffff", "bold": true, "align": "center" }, "compId": 21 }, { "type": "Label", "props": { "y": 57, "x": 38, "text": "保卫球", "strokeColor": "#fdfdfd", "stroke": 2, "fontSize": 15, "color": "#ff5c45", "bold": true }, "compId": 22 }, { "type": "Label", "props": { "y": 76, "x": 39, "width": 46, "text": "+1", "strokeColor": "#fdfdfd", "stroke": 2, "height": 15, "fontSize": 15, "color": "#ff5c45", "bold": true, "align": "center" }, "compId": 23 }, { "type": "Sprite", "props": { "y": 34, "x": 25, "texture": "start/loginflag.png" }, "compId": 24 }], "components": [] }, { "type": "Sprite", "props": { "y": 619, "x": 62, "texture": "start/loginitembg.png" }, "compId": 25, "child": [{ "type": "Label", "props": { "y": 5, "x": 32, "width": 61, "text": "第一天", "height": 23, "fontSize": 18, "color": "#ffffff", "bold": true, "align": "center" }, "compId": 26 }, { "type": "Label", "props": { "y": 57, "x": 38, "text": "保卫球", "strokeColor": "#fdfdfd", "stroke": 2, "fontSize": 15, "color": "#ff5c45", "bold": true }, "compId": 27 }, { "type": "Label", "props": { "y": 76, "x": 39, "width": 46, "text": "+1", "strokeColor": "#fdfdfd", "stroke": 2, "height": 15, "fontSize": 15, "color": "#ff5c45", "bold": true, "align": "center" }, "compId": 28 }, { "type": "Sprite", "props": { "y": 34, "x": 25, "texture": "start/loginflag.png" }, "compId": 29 }], "components": [] }, { "type": "Sprite", "props": { "y": 619, "x": 195, "texture": "start/loginitembg.png" }, "compId": 30, "child": [{ "type": "Label", "props": { "y": 5, "x": 32, "width": 61, "text": "第一天", "height": 23, "fontSize": 18, "color": "#ffffff", "bold": true, "align": "center" }, "compId": 31 }, { "type": "Label", "props": { "y": 57, "x": 38, "text": "保卫球", "strokeColor": "#fdfdfd", "stroke": 2, "fontSize": 15, "color": "#ff5c45", "bold": true }, "compId": 32 }, { "type": "Label", "props": { "y": 76, "x": 39, "width": 46, "text": "+1", "strokeColor": "#fdfdfd", "stroke": 2, "height": 15, "fontSize": 15, "color": "#ff5c45", "bold": true, "align": "center" }, "compId": 33 }, { "type": "Sprite", "props": { "y": 34, "x": 25, "texture": "start/loginflag.png" }, "compId": 34 }], "components": [] }, { "type": "Sprite", "props": { "y": 619, "x": 327, "texture": "start/loginitembg.png" }, "compId": 35, "child": [{ "type": "Label", "props": { "y": 5, "x": 32, "width": 61, "text": "第一天", "height": 23, "fontSize": 18, "color": "#ffffff", "bold": true, "align": "center" }, "compId": 36 }, { "type": "Label", "props": { "y": 57, "x": 38, "text": "保卫球", "strokeColor": "#fdfdfd", "stroke": 2, "fontSize": 15, "color": "#ff5c45", "bold": true }, "compId": 37 }, { "type": "Label", "props": { "y": 76, "x": 39, "width": 46, "text": "+1", "strokeColor": "#fdfdfd", "stroke": 2, "height": 15, "fontSize": 15, "color": "#ff5c45", "bold": true, "align": "center" }, "compId": 38 }, { "type": "Sprite", "props": { "y": 34, "x": 25, "texture": "start/loginflag.png" }, "compId": 39 }], "components": [] }, { "type": "Label", "props": { "y": 790, "x": 187, "width": 265, "text": "今日保卫球数：20", "strokeColor": "#fdfdfd", "stroke": 2, "height": 35, "fontSize": 24, "color": "#ff5c45", "bold": true, "align": "center" }, "compId": 40 }, { "type": "Button", "props": { "y": 825, "x": 209, "var": "btn_sing", "stateNum": 1, "skin": "start/loingbtn.png" }, "compId": 41 }], "loadList": ["start/loginbg.png", "start/closebtn.png", "start/loginitembg.png", "start/loginflag.png", "start/loingbtn.png"], "loadList3D": [], "components": [] };
            return SignViewSkinUI;
        }(Dialog));
        start.SignViewSkinUI = SignViewSkinUI;
        var StartViewSkinUI = /** @class */ (function (_super) {
            __extends(StartViewSkinUI, _super);
            function StartViewSkinUI() {
                return _super.call(this) || this;
            }
            StartViewSkinUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(StartViewSkinUI.uiView);
            };
            StartViewSkinUI.uiView = { "type": "Scene", "props": { "width": 640, "runtime": "script/start/StartView", "height": 1136 }, "compId": 1, "child": [{ "type": "Sprite", "props": { "y": -4, "x": 0, "texture": "start/startbg.jpg" }, "compId": 2 }, { "type": "Sprite", "props": { "y": 648, "x": 220, "texture": "start/startimg7.png" }, "compId": 3 }, { "type": "Sprite", "props": { "y": 642.5, "x": 0, "texture": "start/startimg5.png" }, "compId": 4 }, { "type": "Sprite", "props": { "y": 735.5, "x": 0, "texture": "start/startimg4.png" }, "compId": 5 }, { "type": "Sprite", "props": { "y": 836, "x": 0, "texture": "start/startimg1.png" }, "compId": 9 }, { "type": "Sprite", "props": { "y": 947, "x": 13, "texture": "start/startimg3.png" }, "compId": 6 }, { "type": "Sprite", "props": { "y": 812, "x": 302, "texture": "start/startimg2.png" }, "compId": 7 }, { "type": "Sprite", "props": { "y": 883, "x": 88, "texture": "start/startimg6.png" }, "compId": 8 }, { "type": "Sprite", "props": { "y": 102, "x": 151.5, "texture": "start/logobtn.png" }, "compId": 10 }, { "type": "Sprite", "props": { "y": 228, "x": 74, "texture": "start/title.png" }, "compId": 11 }, { "type": "Button", "props": { "y": 699, "x": 320, "width": 234, "var": "btn_share", "stateNum": 1, "skin": "start/sharebtn.png", "height": 114, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 12 }, { "type": "Button", "props": { "y": 848, "x": 320, "width": 296, "var": "btn_start", "stateNum": 1, "skin": "start/startbtn.png", "height": 105, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 13 }, { "type": "Sprite", "props": { "y": 756.5, "x": 185.5, "texture": "start/starttxt1.png" }, "compId": 14 }, { "type": "Sprite", "props": { "y": 915, "x": 176, "texture": "start/ballbg.png" }, "compId": 15 }, { "type": "Button", "props": { "y": 1041, "x": 320, "width": 234, "var": "btn_lottery", "stateNum": 1, "skin": "start/prizebtn.png", "height": 114, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 16 }, { "type": "Button", "props": { "y": 56, "x": 562, "width": 147, "var": "btn_rule", "stateNum": 1, "skin": "start/rulebtn.png", "height": 71, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 17 }, { "type": "Label", "props": { "y": 937, "x": 368, "width": 50, "var": "lab_ballNum", "text": "20", "height": 30, "fontSize": 30, "color": "#ffffff", "bold": true, "anchorY": 0.5, "anchorX": 0.5, "align": "center" }, "compId": 18 }, { "type": "Label", "props": { "y": 936, "x": 426, "width": 80, "var": "lab_addScore", "valign": "middle", "text": "+5", "strokeColor": "#ffffff", "stroke": 10, "height": 60, "fontSize": 50, "color": "#fd1814", "bold": true, "anchorY": 0.5, "anchorX": 0.5, "align": "center" }, "compId": 19 }], "loadList": ["start/startbg.jpg", "start/startimg7.png", "start/startimg5.png", "start/startimg4.png", "start/startimg1.png", "start/startimg3.png", "start/startimg2.png", "start/startimg6.png", "start/logobtn.png", "start/title.png", "start/sharebtn.png", "start/startbtn.png", "start/starttxt1.png", "start/ballbg.png", "start/prizebtn.png", "start/rulebtn.png"], "loadList3D": [], "components": [] };
            return StartViewSkinUI;
        }(Scene));
        start.StartViewSkinUI = StartViewSkinUI;
    })(start = ui.start || (ui.start = {}));
})(ui = exports.ui || (exports.ui = {}));
(function (ui) {
    var test;
    (function (test) {
        var TestSceneUI = /** @class */ (function (_super) {
            __extends(TestSceneUI, _super);
            function TestSceneUI() {
                return _super.call(this) || this;
            }
            TestSceneUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(TestSceneUI.uiView);
            };
            TestSceneUI.uiView = { "type": "View", "props": { "width": 640, "runtime": "script/GameUI.ts", "name": "gameBox", "height": 1136 }, "compId": 1, "child": [{ "type": "Sprite", "props": { "y": 1116, "x": -83, "width": 805, "texture": "test/block.png", "name": "ground", "height": 20 }, "compId": 3, "child": [{ "type": "Script", "props": { "y": 0, "x": 0, "width": 805, "restitution": 0, "label": "ground", "isSensor": false, "height": 20, "runtime": "laya.physics.BoxCollider" }, "compId": 5 }, { "type": "Script", "props": { "type": "static", "group": 1, "runtime": "laya.physics.RigidBody" }, "compId": 6 }], "components": [] }, { "type": "Sprite", "props": { "y": 0, "x": 0, "name": "gameBox" }, "compId": 18 }, { "type": "Sprite", "props": { "y": 0, "x": 0, "name": "UI" }, "compId": 14, "child": [{ "type": "Label", "props": { "y": 50, "x": 158, "width": 272, "var": "scoreLbl", "height": 47, "fontSize": 40, "color": "#51c524", "align": "center" }, "compId": 17 }, { "type": "Label", "props": { "y": 72, "x": 0, "width": 640, "var": "tipLbll", "valign": "middle", "text": "别让箱子掉下来\\n\\n点击屏幕开始游戏", "height": 995, "fontSize": 40, "color": "#c6302e", "align": "center" }, "compId": 16 }], "components": [] }, { "type": "Script", "props": { "enabled": true, "dropBox": "@Prefab:prefab/DropBox.prefab", "bullet": "@Prefab:prefab/Bullet.prefab", "runtime": "script/GameControl.ts" }, "compId": 20 }, { "type": "Sprite", "props": { "y": 52, "x": -13 }, "compId": 26, "child": [{ "type": "Script", "props": { "y": 242, "x": 660.5, "restitution": 1, "points": "0,0,-53,-1,-54,833", "runtime": "laya.physics.ChainCollider" }, "compId": 21 }, { "type": "Script", "props": { "y": -52, "x": 13, "type": "static", "group": 1, "runtime": "laya.physics.RigidBody" }, "compId": 22 }, { "type": "Script", "props": { "y": -46, "x": 467, "restitution": 1, "points": "-1,0,35,-4,70,2,96,15,145,59,169,111,179,160,183,206,183,1121", "runtime": "laya.physics.ChainCollider" }, "compId": 23 }, { "type": "Script", "props": { "y": -38, "x": 96, "restitution": 1, "points": "-82,-13,364,-14", "runtime": "laya.physics.ChainCollider" }, "compId": 24 }, { "type": "Script", "props": { "y": -29, "x": 109, "restitution": 1, "points": "-92,-17,-92,1095", "runtime": "laya.physics.ChainCollider" }, "compId": 25 }], "components": [] }, { "type": "Sprite", "props": { "y": 757, "x": 157, "presetID": 1, "texture": "game/box1.png", "pivotY": 50, "pivotX": 50, "name": "levelTxt", "isPresetRoot": true, "group": 1, "gravityScale": 0.5 }, "compId": 27, "child": [{ "type": "Script", "props": { "presetID": 2, "width": 100, "restitution": 1, "height": 100, "friction": 0.1, "runtime": "laya.physics.BoxCollider" }, "compId": 2 }, { "type": "Script", "props": { "presetID": 3, "type": "kinematic", "runtime": "laya.physics.RigidBody" }, "compId": 28 }, { "type": "Text", "props": { "presetID": 4, "name": "levelTxt", "y": 59, "x": 12, "width": 77, "valign": "middle", "text": "1", "height": 39, "fontSize": 30, "color": "#ffffff", "align": "center", "runtime": "laya.display.Text" }, "compId": 4 }, { "type": "Script", "props": { "presetID": 5, "runtime": "script/DropBox.ts" }, "compId": 9 }], "components": [] }, { "type": "Sprite", "props": { "y": 742, "x": 290, "presetID": 1, "texture": "game/box2.png", "pivotY": 55, "pivotX": 60, "isPresetRoot": true }, "compId": 29, "child": [{ "type": "Script", "props": { "presetID": 2, "y": 0, "x": 0, "restitution": 1, "points": "62,0,124,100,0,100", "friction": 0.1, "runtime": "laya.physics.PolygonCollider" }, "compId": 30 }, { "type": "Script", "props": { "presetID": 3, "y": 69.5, "x": 59.5, "width": 1, "type": "static", "rotation": -3, "height": 1, "runtime": "laya.physics.RigidBody" }, "compId": 31 }, { "type": "Text", "props": { "presetID": 4, "name": "levelTxt", "y": 69, "x": 19, "width": 87, "valign": "middle", "text": "1", "height": 34, "fontSize": 30, "color": "#ffffff", "align": "center", "runtime": "laya.display.Text" }, "compId": 32 }, { "type": "Script", "props": { "presetID": 5, "runtime": "script/DropBox.ts" }, "compId": 7 }], "components": [] }, { "type": "Sprite", "props": { "y": 630.75, "x": 350.25, "presetID": 1, "texture": "game/box3.png", "pivotY": 50, "pivotX": 70, "name": "box3", "isPresetRoot": true }, "compId": 33, "child": [{ "type": "Script", "props": { "presetID": 3, "y": 19.5, "x": 19.5, "type": "static", "runtime": "laya.physics.RigidBody" }, "compId": 35 }, { "type": "Text", "props": { "presetID": 4, "name": "levelTxt", "y": 72.5, "x": 30.75, "width": 78, "valign": "middle", "text": "5", "height": 35, "fontSize": 25, "color": "#f9f6f6", "align": "center", "runtime": "laya.display.Text" }, "compId": 36 }, { "type": "Script", "props": { "presetID": 5, "runtime": "script/DropBox.ts" }, "compId": 8 }, { "type": "Script", "props": { "presetID": 6, "y": -1, "x": 13, "restitution": 1, "radius": 55, "friction": 0.1, "runtime": "laya.physics.CircleCollider" }, "compId": 10 }], "components": [] }, { "type": "Sprite", "props": { "y": 487, "x": 125, "presetID": 1, "texture": "game/box3.png", "pivotY": 50, "pivotX": 70, "name": "box3", "isPresetRoot": true }, "compId": 37, "child": [{ "type": "Script", "props": { "presetID": 3, "y": 19.5, "x": 19.5, "type": "static", "runtime": "laya.physics.RigidBody" }, "compId": 39 }, { "type": "Text", "props": { "presetID": 4, "name": "levelTxt", "y": 72.5, "x": 30.75, "width": 78, "valign": "middle", "text": "5", "height": 35, "fontSize": 25, "color": "#f9f6f6", "align": "center", "runtime": "laya.display.Text" }, "compId": 40 }, { "type": "Script", "props": { "presetID": 5, "runtime": "script/DropBox.ts" }, "compId": 11 }, { "type": "Script", "props": { "presetID": 6, "y": -1, "x": 13, "restitution": 1, "radius": 55, "friction": 0.1, "runtime": "laya.physics.CircleCollider" }, "compId": 12 }], "components": [] }, { "type": "Sprite", "props": { "y": 467.25, "x": 375.25, "presetID": 1, "texture": "game/box2.png", "pivotY": 55, "pivotX": 60, "isPresetRoot": true }, "compId": 41, "child": [{ "type": "Script", "props": { "restitution": 1, "presetID": 2, "y": 0, "x": 0, "points": "62,0,124,100,0,100", "friction": 0.1, "runtime": "laya.physics.PolygonCollider" }, "compId": 42 }, { "type": "Script", "props": { "presetID": 3, "y": 69.5, "x": 59.5, "width": 1, "type": "static", "rotation": -3, "height": 1, "runtime": "laya.physics.RigidBody" }, "compId": 43 }, { "type": "Text", "props": { "presetID": 4, "name": "levelTxt", "y": 69, "x": 19, "width": 87, "valign": "middle", "text": "1", "height": 34, "fontSize": 30, "color": "#ffffff", "align": "center", "runtime": "laya.display.Text" }, "compId": 44 }, { "type": "Script", "props": { "presetID": 5, "runtime": "script/DropBox.ts" }, "compId": 13 }], "components": [] }, { "type": "Sprite", "props": { "y": 894.75, "x": 96.75, "presetID": 1, "texture": "game/box2.png", "pivotY": 55, "pivotX": 60, "isPresetRoot": true }, "compId": 45, "child": [{ "type": "Script", "props": { "presetID": 2, "y": 0, "x": 0, "restitution": 1, "points": "62,0,124,100,0,100", "friction": 0.1, "runtime": "laya.physics.PolygonCollider" }, "compId": 46 }, { "type": "Script", "props": { "presetID": 3, "y": 69.5, "x": 59.5, "width": 1, "type": "static", "rotation": -3, "height": 1, "runtime": "laya.physics.RigidBody" }, "compId": 47 }, { "type": "Text", "props": { "presetID": 4, "name": "levelTxt", "y": 69, "x": 19, "width": 87, "valign": "middle", "text": "1", "height": 34, "fontSize": 30, "color": "#ffffff", "align": "center", "runtime": "laya.display.Text" }, "compId": 48 }, { "type": "Script", "props": { "presetID": 5, "runtime": "script/DropBox.ts" }, "compId": 15 }], "components": [] }, { "type": "Sprite", "props": { "y": 955, "x": 367.25, "presetID": 1, "texture": "game/box1.png", "pivotY": 50, "pivotX": 50, "name": "levelTxt", "isPresetRoot": true, "group": 1, "gravityScale": 0.5 }, "compId": 49, "child": [{ "type": "Script", "props": { "presetID": 2, "width": 100, "restitution": 1, "height": 100, "friction": 0.1, "runtime": "laya.physics.BoxCollider" }, "compId": 50 }, { "type": "Script", "props": { "presetID": 3, "type": "kinematic", "runtime": "laya.physics.RigidBody" }, "compId": 51 }, { "type": "Text", "props": { "presetID": 4, "name": "levelTxt", "y": 59, "x": 12, "width": 77, "valign": "middle", "text": "1", "height": 39, "fontSize": 30, "color": "#ffffff", "align": "center", "runtime": "laya.display.Text" }, "compId": 52 }, { "type": "Script", "props": { "presetID": 5, "runtime": "script/DropBox.ts" }, "compId": 53 }], "components": [] }], "loadList": ["test/block.png", "prefab/DropBox.prefab", "prefab/Bullet.prefab", "prefab/DropBox.prefab", "prefab/DropBox2.prefab", "prefab/DropBox3.prefab"], "loadList3D": [], "components": [] };
            return TestSceneUI;
        }(View));
        test.TestSceneUI = TestSceneUI;
    })(test = ui.test || (ui.test = {}));
})(ui = exports.ui || (exports.ui = {}));
},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
